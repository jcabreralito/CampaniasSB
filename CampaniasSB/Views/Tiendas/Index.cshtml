@model IList<CampaniasSB.Controllers.TiendasController.spTiendas>
@{
    ViewBag.Title = "Tiendas";
    //Layout = "~/Views/Shared/_Layout_Restaurantes.cshtml";
}

<div id="tiendas" style="visibility: visible; display: block">

    <style>
        #resTiendasTable th, #resTiendasTable td {
            white-space: nowrap;
        }

        tfoot {
            display: table-header-group !important;
        }
    </style>

    <div class="fixed-action-btn">
        <a class="btn-floating btn-sm green" title="Agregar" onclick="PopupForm('@Url.Action("AddOrEdit","Tiendas")')">
            <i class="large material-icons">add_circle</i>
        </a>
    </div>

    <table id="resTiendasTable" class="table table-striped table-bordered compact nowrap" style="width:100%; text-transform: uppercase">

        <tfoot>
            <tr>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </tfoot>
    </table>
</div>

@section scripts{

    <script>

    var Popup, PopupMat, dataTable;
            $(document).ready(function () {
                dataTable = $("#resTiendasTable").DataTable({
                    "serverSide": false,
                    "deferRender": true,
                    "ajax": {
                        "url": "Tiendas/GetData",
                        "type": "GET",
                        "datatype": "json"
                    },
                    "columns": [
                        {
                            "data": "NoTienda", "render": function (data) {
                                return "<span>" + data + "</span>";
                            },
                            "title": "No.",
                            "className": "dt-body-center text-center dt-specialColorBlack",
                        },
                        {
                            "data": "NombreTienda", "render": function (data) {
                                return "<span>" + data + "</span>";
                            },
                            "title": "Tienda",
                            "className": "dt-body-center text-left dt-specialColorBlack",
                        },
                        {
                            "data": "Region", "render": function (data) {
                                return "<span>" + data + "</span>";
                            },
                            "title": "Región",
                            "className": "dt-body-center text-center",
                        },
                        {
                            "data": "Ciudad", "render": function (data) {
                                return "<span>" + data + "</span>";
                            },
                            "title": "Ciudad",
                            "className": "dt-body-center text-center",
                        },
                        {
                            "data": "Esquema", "render": function (data) {
                                return "<span>" + data + "</span>";
                            },
                            "title": "Esquema Gral",
                            "className": "dt-body-center text-center",
                        },
                        {
                            data: "BIS",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return "SI"
                                    //return "<label for='danger' class='btndangerCheck'><input type='checkbox' id='danger' class='badgebox' checked='checked' disabled='disabled'><span class='badge'>&check;</span></label>";
                                } else {
                                    return "NO"
                                    //return "<label for='danger' class='btndangerCheck'><input type='checkbox' id='danger' class='badgebox' disabled='disabled'><span class='badge'>&check;</span></label>";
                                }
                                return data;
                            },
                            "className": "dt-body-center text-center",
                            "title": "BIS",
                            "orderable": false,
                            "searchable": false,
                        },
                        {
                            data: "Idioma",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return "BILINGÜE";
                                } else {
                                    return "ESPAÑOL";
                                }
                                return data;
                            },
                            "className": "dt-body-center text-center",
                            "title": "Idioma Material",
                            "orderable": false,
                            "searchable": false,
                        },
                        {
                            "data": "EsquemaCGG", "render": function (data) {
                                return "<span>" + data + "</span>";
                            },
                            "title": "ESQUEMA CENEFA",
                            "className": "dt-body-center text-center",
                        },
                        {
                            "data": "Observaciones", "render": function (data) {
                                return "<span>" + data + "</span>";
                            },
                            "title": "Observaciones",
                            "className": "dt-body-center text-left",
                        },
                        {
                            data: "Activo",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return "<label class='black-text' style='font-weight: bold; margin-top: 5px'>SI</label>"
                                    //return "<label for='danger' class='btndangerCheck'><input type='checkbox' id='danger' class='badgebox' checked='checked' disabled='disabled'><span class='badge'>&check;</span></label>";
                                } else {
                                    return "<label class='red-text' style='font-weight: bold; margin-top: 5px'>NO</label>"
                                    //return "<label for='danger' class='btndangerCheck'><input type='checkbox' id='danger' class='badgebox' disabled='disabled'><span class='badge'>&check;</span></label>";
                                }
                                return data;
                            },
                            "className": "dt-body-center text-center",
                            "title": "Activo",
                            "orderable": false,
                            "searchable": false,
                        },
                        {
                            "data": "TiendaId", "render": function (data) {
                                return "<a class='btn-default btn-lg' style='background-color: transparent; cursor: pointer' onclick=PopupForm('@Url.Action("AddOrEdit","Tiendas")/" + data + "')><i class='fas fa-pencil-alt'></i></a>";
                            },
                            "title": "Editar",
                            "orderable": false,
                            "searchable": false,
                            "className": "dt-body-center text-center noExport dt-specialColorBlack",
                        },
                        {
                            "data": "TiendaId", "render": function (data) {
                                return "<a class='btn-danger btn-lg' style='background-color: transparent; cursor: pointer' onclick=Delete(" + data + ")><i class='fas fa-trash' style='color: #067655'></i></a>";
                            },
                            "title": "Eliminar",
                            "orderable": false,
                            "searchable": false,
                            "className": "dt-body-center text-center noExport dt-specialColorBlack",
                        },
                        {
                            "data": "TiendaId", "render": function (data, type, row) {
                                if (row.Activo == 0) {
                                    return "<a class='btn-default btn-lg' style='background-color: transparent; cursor: not-allowed' ><i class='fas fa-ban' style='color: #067655'></i></a>";
                                }
                                else {
                                    return "<a class='btn-default btn-lg' style='background-color: transparent; cursor: pointer' onclick=PopupFormMat('@Url.Action("Articulos", "Tiendas")/" + data + "')><i class='fas fa-plus-circle'></i></a>";
                                }
                            },
                            "title": "Artículos",
                            "orderable": false,
                            "searchable": false,
                            "className": "dt-body-center text-center noExport dt-specialColorBlack",
                        },
                ],
                    "order": [[0, "asc"]],
                    "pagingType": "full_numbers",
                    "language": {
                        "emptyTable": "No hay datos, dar click en el botón <b>Agregar</b>",
                        "sLengthMenu": "Mostrar _MENU_ registros",
                        "sZeroRecords": "No se encontraron resultados",
                        "sInfo": "_END_ registros",
                        "sInfoEmpty": "Registros del 0 al 0 de un total de 0 registros",
                        "sInfoFiltered": "de un total de _MAX_",
                        "sInfoPostFix": "",
                        "sSearch": "Buscar:",
                        "sUrl": "",
                        "sInfoThousands": ",",
                        "sLoadingRecords": "Cargando informacíon...",
                        "oPaginate": {
                            "sFirst": "<<",
                            "sLast": ">>",
                            "sNext": ">",
                            "sPrevious": "<"
                        },
                        "oAria": {
                            "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                            "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                        },
                        "buttons": {
                            "copy": "Copiar",
                            "colvis": "Mostrar/Ocultar Columnas",
                            "pageLength": 'Mostrar registros',
                        },
                        select: {
                            rows: {
                                _: "%d registros seleccionados",
                                0: "",
                                1: "1 registro seleccionado"
                            }
                        },
                    },
                    dom: 'lBfrtip',
                    buttons: [
                        {
                            extend: 'colvisGroup',
                            text: '<i class="fas fa-list" title="Mostrar Todo"></i>',
                            show: ':hidden',
                        },
                        {
                            extend: 'colvis',
                            columns: ':gt(1)',
                            text: '<i class="fas fa-tasks" title="Mostrar / Ocultar Columnas"></i>',
                        },
                        {
                            extend: 'excelHtml5',
                            title: null,
                            text: '<i class="fas fa-file-excel" title="Exportar a Excel"></i>',
                            exportOptions: {
                                orthogonal: 'export',
                                columns: "thead th:not(.noExport)"
                            },
                            filename: 'Tiendas',
                            autoFilter: true,
                            sheetName: 'Tiendas',
                            messageTop: null,
                            body: true,
                            footer: false,
                        },
                    ],
                    autoWidth: true,
                    fixedColumns: true,
                    fixedColumns: {
                        leftColumns: 2,
                    },
                    initComplete: function () {
                        this.api().columns([2, 3, 4, 7]).every(function () {
                            var column = this;
                            var select = $('<select><option value="">TODOS</option></select>')
                                .appendTo($(column.footer()))
                                .on('change', function () {
                                    var val = $.fn.dataTable.util.escapeRegex(
                                        $(this).val()
                                    );

                                    column
                                        .search(val ? '^' + val + '$' : '', true, false)
                                        .draw();
                                });

                            $(select).click(function (e) {
                                e.stopPropagation();
                            });

                            column.data().unique().sort().each(function (d, j) {
                                select.append('<option value="' + d + '">' + d + '</option>')
                            });
                        });
                    },
                    stateSave: true,
                    select: true,
                    scrollY: true,
                    scrollX: true,
                    keys: false,
                    'bLengthChange': true,
                    'bInfo': true,
                    "lengthMenu": [[-1, 15, 25, 50, 100], ["TODOS", 15, 25, 50, 100]],
                });
            });

            function PopupForm(url) {
                viewPage();
                var formDiv = $('<div/>');
                $.get(url)
                    .done(function (response) {
                        formDiv.html(response);
                        Popup = formDiv.dialog({
                            autoOpen: true,
                            resizable: false,
                            title: "TIENDAS",
                            width: 750,
                            modal: true,
                            closeOnEscape: false,
                            closeText: "Cerrar",
                            hide: { effect: "fade", duration: 550 },
                            show: { effect: "fade", duration: 550 },
                            close: function () {
                                Popup.dialog('destroy').remove();
                                hidePages();
                            }
                        });
                    });
            }

            function PopupFormMat(url) {
                viewPage();
                var formDiv = $('<div/>');
                $.get(url)
                    .done(function (response) {
                        formDiv.html(response);
                        PopupMat = formDiv.dialog({
                            //position: ['middle', 20],
                            autoOpen: true,
                            resizable: false,
                            title: "ARTÍCULOS",
                            width: 750,
                            modal: true,
                            closeOnEscape: false,
                            closeText: "Cerrar",
                            hide: { effect: "fade", duration: 550 },
                            show: { effect: "fade", duration: 550 },
                            close: function () {
                                PopupMat.dialog('destroy').remove();
                                hidePages();
                            }
                        });
                    });
            }

            function SubmitFormMat(form) {
                var formData = new FormData(form);
                $.validator.unobtrusive.parse(form);
                if ($(form).valid()) {
                    $.ajax({
                        type: "POST",
                        url: form.action,
                        data: formData,
                        contentType: false,
                        cache: false,
                        processData: false,
                        //data : $(form).serialize(),
                        success: function (data) {
                            if (data.success) {
                                PopupMat.dialog('close');
                                dataTable.ajax.reload();

                                $.notify(data.message, {
                                    globalPosition: "top center",
                                    className: "success",
                                    autoHide: true,
                                    autoHideDelay: 2000,
                                })

                            }
                        }
                    });
                }
                return false;
            }


            function SubmitForm(form) {
                var formData = new FormData(form);
                $.validator.unobtrusive.parse(form);
                if ($(form).valid()) {
                    $.ajax({
                        type: "POST",
                        url: form.action,
                        data: formData,
                        contentType: false,
                        cache: false,
                        processData: false,
                        success: function (data) {
                            if (data.success) {
                                Popup.dialog('close');
                                dataTable.ajax.reload();

                                $.notify(data.message, {
                                    globalPosition: "top center",
                                    className: "success",
                                    autoHide: true,
                                    autoHideDelay: 2000,
                                })

                            }
                        }
                    });
                }
                return false;
            }

            function Delete(id) {
                Swal.fire({
                    title: '¿ Eliminar Tienda ?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#067655',
                    cancelButtonColor: '#067655',
                    confirmButtonText: 'Si',
                    cancelButtonText: 'No',
                }).then((result) => {
                    if (result.value) {
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("Delete","Tiendas")/' + id,
                            success: function (data) {
                                if (data.success) {
                                    dataTable.ajax.reload();

                                    $.notify(data.message, {
                                        globalPosition: "top center",
                                        className: "success"
                                    })
                                }
                            }

                        });
                    }
                })

            }

            function exportTableToExcel(tableID, filename = '') {
                var downloadLink;
                var dataType = 'application/octec-stream';
                //var tableSelect = dataTable;
                var tableSelect = document.getElementById(tableID);
                var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');

                // Specify file name
                filename = filename ? filename + '.xlsx' : 'excel_data.xlsx';

                // Create download link element
                downloadLink = document.createElement("a");

                document.body.appendChild(downloadLink);

                if (navigator.msSaveOrOpenBlob) {
                    var blob = new Blob(['ufeff', tableHTML], {
                        type: dataType
                    });
                    navigator.msSaveOrOpenBlob(blob, filename);
                } else {
                    // Create a link to the file
                    downloadLink.href = 'data:' + dataType + ', ' + tableHTML;

                    // Setting the file name
                    downloadLink.download = filename;

                    //triggering the function
                    downloadLink.click();
                }
            }

    </script>
}
