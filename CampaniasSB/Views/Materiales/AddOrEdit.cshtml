@model CampaniasSB.Models.Articulo
@{
}

@using (Html.BeginForm("AddOrEdit", "Materiales", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.ArticuloId)
    @Html.HiddenFor(model => model.Eliminado)
    @*@Html.HiddenFor(model => model.Imagen)*@

    <div class="row">
        <div class="input-field col s12" style="text-transform: uppercase !important">
            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @type = "text", @class = "validate", @required = "true", style = "text-transform: uppercase !important" } })
            <label class="active" for="Descripcion">Artículo</label>
        </div>
    </div>

    if (Model.ArticuloId == 0)
    {
        <div class="row">
            <div class="form-group focus col s6" style="text-transform: uppercase !important">
                <label for="SencilloMultiple">Sencillo/Múltiple</label>
                <div class="customselect">
                    @Html.DropDownList("SencilloMultiple", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[3].Watermark, htmlAttributes: new { @class = "form-control form-control-select clgfocus", @type = "text", @required = "true", style = "text-transform: uppercase", @oninvalid = "setCustomValidity('Seleccionar un elemento de la lista')", @oninput = "setCustomValidity('')" })
                </div>
                <span class="focus-border"></span>
            </div>

            <div class="input-field col s6" style="margin-top: 10px">
                @Html.EditorFor(model => model.CantidadDefault, new { htmlAttributes = new { @type = "text", @class = "validate center-align", @required = "true", style = "text-transform: uppercase !important" } })
                <label class="active" for="CantidadDefault">Cantidad</label>
            </div>
        </div>
    }

    else
    {
        <div class="row">
            <div class="form-group focus col s4" style="text-transform: uppercase !important">
                <label for="SencilloMultiple">Sencillo/Múltiple</label>
                <div class="customselect">
                    @Html.DropDownList("SencilloMultiple", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[3].Watermark, htmlAttributes: new { @class = "form-control form-control-select clgfocus", @type = "text", @required = "true", style = "text-transform: uppercase", @oninvalid = "setCustomValidity('Seleccionar un elemento de la lista')", @oninput = "setCustomValidity('')" })
                </div>
                <span class="focus-border"></span>
            </div>

            <div class="input-field col s4" style="margin-top: 10px">
                @Html.EditorFor(model => model.CantidadDefault, new { htmlAttributes = new { @type = "text", @class = "validate center-align", @required = "true", style = "text-transform: uppercase !important" } })
                <label class="active" for="CantidadDefault">Cantidad</label>
            </div>

            <div class="input-field center-align col s4">
                NO
                @Html.CheckBoxFor(model => model.Activo, new { @class = "switch_1" })
                SI
                <label class="active" for="Activo">Aplica Material</label>
            </div>

        </div>
    }

    <div class="row">
        <div class="input-field center-align col m4">
            NO
            @Html.CheckBoxFor(model => model.Precio, new { @class = "switch_1" })
            SI
            <label class="active" for="Precio">Precio</label>
        </div>

        <div class="input-field center-align col m4">
            NO
            @Html.CheckBoxFor(model => model.Bilingue, new { @class = "switch_1" })
            SI
            <label class="active" for="Bilingue">Bilingüe</label>
        </div>

        <div class="input-field col m4" style="margin-top: 11px">
            @Html.EditorFor(model => model.Medida, new { htmlAttributes = new { @type = "text", @class = "validate center-align", style = "text-transform: uppercase !important" } })
            <label class="active" for="Medida">Medida</label>
        </div>

    </div>

    <div class="row">
        <div class="input-field col s12" style="text-transform: uppercase !important">
            @Html.TextAreaFor(model => model.Observaciones, new { @class = "materialize-textarea validate", style = "text-transform: uppercase !important" })
            <label class="active" for="Observaciones">Observaciones</label>
        </div>
    </div>

    @*<div class="input-field col m12" style="text-transform: uppercase !important">
            <div style="margin-top: -10px">
                <label for="ImagenFile" class="subir">
                    <i class="fas fa-cloud-upload-alt"></i> Elegir Imagen...
                </label>
                &nbsp;&nbsp; @Html.TextBoxFor(modelo => modelo.ImagenFile, new { type = "file", accept = "image/*", style = "display: none;", onchange = "readURL(this);" })
            </div>
            <div class="center-align" style="margin-bottom: 5px">
                <div id="info"></div>
                <img id="blah" src="~/Content/images/Productos/@Model.Imagen" style="margin-top: 4px" height="220" alt="Imagen SB" />
            </div>
        </div>*@

    <div class="center-align col m12">
        <button id="aceptar" type="submit" title="Aceptar" disabled class="btn-floating btn-sm green" style="border-radius: 50%" onclick="hidePage()">
            <i class="large material-icons">check</i>
        </button>
    </div>
}

<script>

    var art = document.getElementById('Descripcion');
    var senMul = document.getElementById('SencilloMultiple');
    var med = document.getElementById('Medida');

    var aplicaMat = document.getElementById('Activo');
    var pre = document.getElementById('Precio');
    var bi = document.getElementById('Bilingue');
    var obs = document.getElementById('Observaciones');

    var acep = document.getElementById('aceptar');

    art.addEventListener('change', function () {
        alcambiar();
    });

    senMul.addEventListener('change', function () {
        alcambiar2();
    });


    aplicaMat.addEventListener('change', function () {
        alcambiar();
    });

    pre.addEventListener('change', function () {
        alcambiar();
    });

    bi.addEventListener('change', function () {
        alcambiar();
    });

    obs.addEventListener('change', function () {
        alcambiar();
    });


    function alcambiar() {

        if (art.value == "") {
            acep.disabled = true;
        }
        else {
            if (senMul.value == "Múltiple" || senMul.value == "MÚLTIPLE") {
                acep.disabled = false;
            }
            else if (senMul.value == "Sencillo" || senMul.value == "SENCILLO") {
                acep.disabled = false;
            }
            else {
                acep.disabled = true;
            }
        }
    }

    function alcambiar2() {
        if (senMul.value == "Múltiple" || senMul.value == "MÚLTIPLE") {
            med.disabled = true;
            med.value = "";

            if (art.value == "") {
                acep.disabled = true;
            }
            else {
                acep.disabled = false;
            }

        }
        else if (senMul.value == "Sencillo" || senMul.value == "SENCILLO") {
            med.disabled = false;
            med.value = "";

            if (art.value == "") {
                acep.disabled = true;
            }
            else {
                acep.disabled = false;
            }

        }
        else {
            med.disabled = false;
            acep.disabled = true;
        }
    }
</script>