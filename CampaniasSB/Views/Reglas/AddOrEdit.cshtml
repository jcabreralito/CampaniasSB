@model CampaniasSB.Models.Regla
@{
}

@using (Html.BeginForm("AddOrEdit", "Reglas", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.ReglaId)

    <div class="row">
        <div class="form-group focus col-sm-12" style="text-transform: uppercase !important;">
            <label for="ArticuloKFCId">Material</label>
            <div class="customselect">
                @Html.DropDownList("ArticuloKFCId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[1].Watermark, htmlAttributes: new { @class = "form-control form-control-select clgfocus", @type = "text", @required = "true", style = "text-transform: uppercase", @oninvalid = "setCustomValidity('Seleccionar un elemento de la lista')", @oninput = "setCustomValidity('')" })
            </div>
            <span class="focus-border"></span>
        </div>
        <div class="input-field col-sm-12" style="text-transform: uppercase !important">
            @Html.EditorFor(model => model.NombreRegla, new { htmlAttributes = new { @type = "text", @class = "validate", @required = "true", style = "text-transform: uppercase !important" } })
            <label class="active" for="NombreRegla">Nombre Regla</label>
        </div>
    </div>

    <div class="center-align">
        <button type="submit" title="Aceptar" class="btn-floating btn-sm green" style="border-radius: 50%" onclick="hidePage()">
            <i class="large material-icons">check</i>
        </button>

        @*<button type="reset" title="Reset" class="btn-floating btn-sm green" style="border-radius: 50%">
                <i class="large material-icons">arrow_back</i>
            </button>*@
    </div>
}
