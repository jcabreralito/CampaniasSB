@{
    ViewBag.Title = "Reglas";
    Layout = "~/Views/Shared/_Layout_Reglas.cshtml";
}

<div id="equity" style="visibility: visible; display: block">

    <style>
        #resEquityTable th, #resEquityTable td {
            white-space: nowrap;
        }

        tfoot {
            display: table-header-group !important;
        }
    </style>

    <div class="fixed-action-btn">
        <a class="btn-floating btn-sm green" title="Agregar" onclick="PopupForm('@Url.Action("AddOrEdit","Reglas")')">
            <i class="large material-icons">add_circle</i>
        </a>
    </div>

    <table id="reglasEquityTable" class="table table-striped table-hover table-bordered compact" style="width:100%; text-transform: uppercase">
        <tfoot>
            <tr>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </tfoot>
    </table>

</div>

@*<div id="franquicias" style="visibility: hidden; display: none">

    <style>
        #resFranquiciasTable th, #resFranquiciasTable td {
            white-space: nowrap;
        }
    </style>

    <div class="fixed-action-btn">
        <a class="btn-floating btn-sm green" title="AgregarF" onclick="PopupForm('@Url.Action("AddOrEdit","Reglas", new { cat = 2})')">
            <i class="large material-icons">add_circle</i>
        </a>
    </div>

    <table id="resFranquiciasTable" class="table table-striped table-bordered compact nowrap" style="width:100%; text-transform: uppercase">
        <tfoot>
            <tr>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </tfoot>
    </table>

</div>*@

<div id="catalogo" style="visibility: hidden; display: none">

    <style>
        #catalogoTable th, #catalogoTable td {
            white-space: nowrap;
        }
    </style>

    <div class="fixed-action-btn">
        <a class="btn-floating btn-sm green" title="Agregar" onclick="PopupFormCat('@Url.Action("AddOrEditCat","Reglas")')">
            <i class="large material-icons">add_circle</i>
        </a>
    </div>

    <table id="catalogoTable" class="table table-striped table-bordered compact nowrap" style="width:100%; text-transform: uppercase">
        <tfoot>
            <tr>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </tfoot>
    </table>

</div>

@section scripts{

    <script>
        var PopupRegla, PopupCar, PopupCat, dataTableReglaEQ, dataTableReglaFQ, dataTableReglaCat;
        $(document).ready(function () {
            dataTableReglaEQ =  $("#reglasEquityTable").DataTable({
                "ajax": {
                    "url": "Reglas/GetDataEquity",
                    "type": "GET",
                    "datatype": "json"
                },
                "order": [[2, "asc"]],
                "columns": [
                    {
                        "data": "ArticuloKFCId", "render": function (data) {
                            return "<span>" + data + "</span>";
                        },
                        "title": "ID",
                        "className": "dt-body-center text-center",
                    },
                    {
                        "data": "Material", "render": function (data) {
                            return "<span>" + data + "</span>";
                        },
                        "title": "Material",
                        //"className": "dt-body-center text-center",
                    },
                    {
                        "data": "Regla", "render": function (data) {
                            return "<span>" + data + "</span>";
                        },
                        "title": "Regla"
                    },
                    {
                        "data": "ReglaId", "render": function (data) {
                            return "<a class='btn-default btn-lg' style='background-color: transparent; cursor: pointer' onclick=PopupForm('@Url.Action("AddOrEdit","Reglas")/" + data + "')><i class='fas fa-pencil-alt'></i></a>";
                        },
                        "title": "Editar",
                        "orderable": false,
                        "searchable": false,
                        "className": "dt-body-center text-center",
                    },
                    {
                        "data": "ReglaId", "render": function (data) {
                            return "<a class='btn-danger btn-lg' style='background-color: transparent; cursor: pointer' onclick=Delete(" + data + ")><i class='fas fa-trash' style='color: #067655'></i></a>";
                        },
                        "title": "Eliminar",
                        "orderable": false,
                        "searchable": false,
                        "className": "dt-body-center text-center",
                    },
                    {
                        "data": "ReglaId", "render": function (data, type, row) {
                            return "<a class='btn-default btn-lg' style='background-color: transparent; cursor: pointer' onclick=PopupFormCar('@Url.Action("Caracteristicas","Reglas")/" + data + "')><i class='fas fa-plus-circle'></i></a>";
                        },
                        "className": "dt-body-center text-center",
                        "title": "Características",
                        "orderable": false,
                        "searchable": false,
                    },
                ],
                //"serverSide": true,
                "language": {
                    "emptyTable": "No hay datos, dar click en el botón <b>Agregar</b>",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sInfo": "_END_ registros",
                    "sInfoEmpty": "Registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "de un total de _MAX_",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "<<",
                        "sLast": ">>",
                        "sNext": ">",
                        "sPrevious": "<"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    },
                    "buttons": {
                        "copy": "Copiar",
                        "colvis": "Mostrar/Ocultar Columnas"
                    },
                    select: {
                        rows: {
                            _: "%d registros seleccionados",
                            0: "",
                            1: "1 registro seleccionado"
                        }
                    },
                },
                dom: 'lfrtip',
                //autoWidth: false,
                //fixedColumns: true,
                fixedColumns: {
                    leftColumns: 2,
                },
                //initComplete: function () {
                //    this.api().columns([0, 1]).every(function () {
                //        var column = this;
                //        var select = $('<select><option value="">=TODOS=</option></select>')
                //            .appendTo($(column.footer()).empty())
                //            .on('change', function () {
                //                var val = $.fn.dataTable.util.escapeRegex(
                //                    $(this).val()
                //                );

                //                column
                //                    .search(val ? '^' + val + '$' : '', true, false)
                //                    .draw();
                //            });

                //        column.data().unique().sort().each(function (d, j) {
                //            select.append('<option value="' + d + '">' + d + '</option>')
                //        });
                //    });
                //},
                stateSave: true,
                select: true,
                scrollY: true,
                scrollX: false,
                keys: false,
                'bLengthChange': true,
                'bInfo': true,
                "lengthMenu": [[-1, 15, 25, 50, 100], ["TODOS", 15, 25, 50, 100]],
            });
        });

        @*$(document).ready(function () {
            dataTableReglaFQ = $("#resFranquiciasTable").DataTable({
                "ajax": {
                    "url": "Reglas/GetDataFranquicias",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    {
                        "data": "Regla", "render": function (data) {
                            return "<span>" + data + "</span>";
                        },
                        "title": "Regla"
                    },
                    {
                        "data": "Material", "render": function (data) {
                            return "<span>" + data + "</span>";
                        },
                        "title": "Material",
                        "className": "dt-body-center text-center",
                    },
                    {
                        "data": "ReglaId", "render": function (data) {
                            return "<a class='btn-default btn-lg' style='background-color: transparent; cursor: pointer' onclick=PopupForm('@Url.Action("AddOrEdit","Reglas")/" + data + "')><i class='fas fa-pencil-alt'></i></a>";
                        },
                        "title": "Editar",
                        "orderable": false,
                        "searchable": false,
                        "className": "dt-body-center text-center",
                    },
                    {
                        "data": "ReglaId", "render": function (data) {
                            return "<a class='btn-danger btn-lg' style='background-color: transparent; cursor: pointer' onclick=Delete(" + data + ")><i class='fas fa-trash' style='color: #067655'></i></a>";
                        },
                        "title": "Eliminar",
                        "orderable": false,
                        "searchable": false,
                        "className": "dt-body-center text-center",
                    },
                    {
                        "data": "ReglaId", "render": function (data, type, row) {
                            return "<a class='btn-default btn-lg' style='background-color: transparent; cursor: pointer' onclick=PopupFormCar('@Url.Action("Caracteristicas","Reglas")/" + data + "')><i class='fas fa-plus-circle'></i></a>";
                        },
                        "className": "dt-body-center text-center",
                        "title": "Características",
                        "orderable": false,
                        "searchable": false,
                    },
                ],
                //"serverSide": true,
                "language": {
                    "emptyTable": "No hay datos, dar click en el botón <b>Agregar</b>",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sInfo": "_END_ registros",
                    "sInfoEmpty": "Registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "de un total de _MAX_",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "<<",
                        "sLast": ">>",
                        "sNext": ">",
                        "sPrevious": "<"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    },
                    "buttons": {
                        "copy": "Copiar",
                        "colvis": "Mostrar/Ocultar Columnas"
                    },
                    select: {
                        rows: {
                            _: "%d registros seleccionados",
                            0: "",
                            1: "1 registro seleccionado"
                        }
                    },
                },
                dom: 'lfrtip',
                //autoWidth: false,
                //fixedColumns: true,
                fixedColumns: {
                    leftColumns: 1,
                },
                //initComplete: function () {
                //    this.api().columns([0, 1]).every(function () {
                //        var column = this;
                //        var select = $('<select><option value="">=TODOS=</option></select>')
                //            .appendTo($(column.footer()).empty())
                //            .on('change', function () {
                //                var val = $.fn.dataTable.util.escapeRegex(
                //                    $(this).val()
                //                );

                //                column
                //                    .search(val ? '^' + val + '$' : '', true, false)
                //                    .draw();
                //            });

                //        column.data().unique().sort().each(function (d, j) {
                //            select.append('<option value="' + d + '">' + d + '</option>')
                //        });
                //    });
                //},
                stateSave: true,
                select: true,
                scrollY: true,
                scrollX: false,
                keys: false,
                'bLengthChange': true,
                'bInfo': true,
                "lengthMenu": [[-1, 15, 25, 50, 100], ["TODOS", 15, 25, 50, 100]],
            });
        });*@

        $(document).ready(function () {
            dataTableReglaCat = $("#catalogoTable").DataTable({
                "ajax": {
                    "url": "Reglas/GetDataCatalogo",
                    "type": "GET",
                    "datatype": "json"
                },
                "order": [[1, "asc"]],
                "columns": [
                    {
                        "data": "ReglaCatalogoId", "render": function (data) {
                            return "<span>" + data + "</span>";
                        },
                        "title": "#",
                        "className": "dt-body-center text-center",
                    },
                    {
                        "data": "Nombre", "render": function (data) {
                            return "<span>" + data + "</span>";
                        },
                        "title": "Nombre"
                    },
                    {
                        "data": "Valor", "render": function (data) {
                            return "<span>" + data + "</span>";
                        },
                        "title": "Valor",
                        "className": "dt-body-center text-center",
                    },
                    {
                        "data": "Categoria", "render": function (data) {
                            return "<span>" + data + "</span>";
                        },
                        "title": "Categoría",
                        "className": "dt-body-center text-center",
                    },
                    {
                        "data": "ReglaCatalogoId", "render": function (data) {
                            return "<a class='btn-default btn-lg' style='background-color: transparent; cursor: pointer' onclick=PopupFormCat('@Url.Action("AddOrEditCat","Reglas")/" + data + "')><i class='fas fa-pencil-alt'></i></a>";
                        },
                        "title": "Editar",
                        "orderable": false,
                        "searchable": false,
                        "className": "dt-body-center text-center",
                    },
                    {
                        "data": "ReglaCatalogoId", "render": function (data) {
                            return "<a class='btn-danger btn-lg' style='background-color: transparent; cursor: pointer' onclick=DeleteCat(" + data + ")><i class='fas fa-trash' style='color: #067655'></i></a>";
                        },
                        "title": "Eliminar",
                        "orderable": false,
                        "searchable": false,
                        "className": "dt-body-center text-center",
                    },
                ],
                "order": [[0, "asc"]],
                //"serverSide": true,
                "language": {
                    "emptyTable": "No hay datos, dar click en el botón <b>Agregar</b>",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sInfo": "_END_ registros",
                    "sInfoEmpty": "Registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "de un total de _MAX_",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "<<",
                        "sLast": ">>",
                        "sNext": ">",
                        "sPrevious": "<"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    },
                    "buttons": {
                        "copy": "Copiar",
                        "colvis": "Mostrar/Ocultar Columnas"
                    },
                    select: {
                        rows: {
                            _: "%d registros seleccionados",
                            0: "",
                            1: "1 registro seleccionado"
                        }
                    },
                },
                dom: 'lfrtip',
                //autoWidth: false,
                //fixedColumns: true,
                fixedColumns: {
                    leftColumns: 1,
                },
                initComplete: function () {
                    this.api().columns([1, 2, 3]).every(function () {
                        var column = this;
                        var select = $('<select><option value="">=TODOS=</option></select>')
                            .appendTo($(column.footer()).empty())
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>')
                        });
                    });
                },
                //stateSave: true,
                select: true,
                scrollY: true,
                scrollX: false,
                keys: false,
                'bLengthChange': true,
                'bInfo': true,
                "lengthMenu": [[-1, 15, 25, 50, 100], ["TODOS", 15, 25, 50, 100]],
            });
        });

        function PopupForm(url) {
            viewPage();
            var formDiv = $('<div/>');
            $.get(url)
            .done(function (response) {
                formDiv.html(response);
                PopupRegla = formDiv.dialog({
                    autoOpen: true,
                    resizable: false,
                    title: 'REGLAS',
                    width: 650,
                    modal: true,
                    closeOnEscape: false,
                    closeText: "Cerrar",
                    hide: { effect: "fade", duration: 550 },
                    show: { effect: "fade", duration: 550 },
                    close: function () {
                        PopupRegla.dialog('destroy').remove();
                        hidePages();
                    }
                });
            });
        }

        function SubmitForm(form) {
            $.validator.unobtrusive.parse(form);
            if($(form).valid()){
                $.ajax({
                    type : "POST",
                    url : form.action,
                    data : $(form).serialize(),
                    success : function (data) {
                        if(data.success)
                        {
                            PopupRegla.dialog('close');
                            dataTableReglaEQ.ajax.reload();
                            //dataTableReglaFQ.ajax.reload();

                            $.notify(data.message,{
                                globalPosition :"top center",
                                className: "success",
                                autoHide: true,
                                autoHideDelay: 2000,
                            })

                        }
                    }
                });
            }
            return false;
        }

        function PopupFormCat(url) {
            viewPage();
            var formDiv = $('<div/>');
            $.get(url)
                .done(function (response) {
                    formDiv.html(response);
                    PopupCat = formDiv.dialog({
                        autoOpen: true,
                        resizable: false,
                        title: 'CATÁLOGO',
                        width: 650,
                        modal: true,
                        closeOnEscape: false,
                        closeText: "Cerrar",
                        hide: { effect: "fade", duration: 550 },
                        show: { effect: "fade", duration: 550 },
                        close: function () {
                            PopupCat.dialog('destroy').remove();
                            hidePages();
                        }
                    });
                });
        }

        function SubmitFormCat(form) {
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                $.ajax({
                    type: "POST",
                    url: form.action,
                    data: $(form).serialize(),
                    success: function (data) {
                        if (data.success) {
                            PopupCat.dialog('close');
                            dataTableReglaEQ.ajax.reload();
                            //dataTableReglaFQ.ajax.reload();
                            dataTableReglaCat.ajax.reload();

                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "success",
                                autoHide: true,
                                autoHideDelay: 2000,
                            })

                        }
                    }
                });
            }
            return false;
        }

        function PopupFormCar(url) {
            viewPage();
            var formDiv = $('<div/>');
            $.get(url)
                .done(function (response) {
                    formDiv.html(response);
                    PopupCar = formDiv.dialog({
                        //position: ['middle', 20],
                        autoOpen: true,
                        resizable: false,
                        title: "CARACTERÍSTICAS",
                        width: 800,
                        modal: true,
                        closeOnEscape: false,
                        closeText: "Cerrar",
                        hide: { effect: "fade", duration: 550 },
                        show: { effect: "fade", duration: 550 },
                        close: function () {
                            PopupCar.dialog('destroy').remove();
                            hidePages();
                        }
                    });
                });
        }

        function SubmitFormCar(form) {
            var formData = new FormData(form);
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                $.ajax({
                    type: "POST",
                    url: form.action,
                    data: formData,
                    contentType: false,
                    cache: false,
                    processData: false,
                    //data : $(form).serialize(),
                    success: function (data) {
                        if (data.success) {
                            PopupCar.dialog('close');
                            //dataTable.ajax.reload();
                            //dataTableF.ajax.reload();
                            //dataTableS.ajax.reload();

                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "success",
                                autoHide: true,
                                autoHideDelay: 2000,
                            })

                        }
                    }
                });
            }
            return false;
        }

        function Delete(id) {
            Swal.fire({
                title: '¿ Eliminar Regla ?',
                //text: "You won't be able to revert this!",
                //icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#067655',
                cancelButtonColor: '#067655',
                confirmButtonText: 'Si',
                cancelButtonText: 'No',
            }).then((result) => {
                if (result.value) {
                    hidePage();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Delete","Reglas")/' + id,
                    success: function (data) {
                        if (data.success)
                        {
                            dataTableReglaEQ.ajax.reload();
                            //dataTableReglaFQ.ajax.reload();

                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "success"
                            })
                            viewPage();
                        }
                    }

                });
                }
            })

        }
        function DeleteCat(id) {
            Swal.fire({
                title: '¿ Eliminar Característica ?',
                //text: "You won't be able to revert this!",
                //icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#067655',
                cancelButtonColor: '#067655',
                confirmButtonText: 'Si',
                cancelButtonText: 'No',
            }).then((result) => {
                if (result.value) {
                    hidePage();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeleteCat","Reglas")/' + id,
                    success: function (data) {
                        if (data.success)
                        {
                            dataTableReglaEQ.ajax.reload();
                            //dataTableReglaFQ.ajax.reload();
                            dataTableReglaCat.ajax.reload();

                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "success"
                            })
                            viewPage();
                        }
                    }

                });
                }
            })

        }
    </script>
}